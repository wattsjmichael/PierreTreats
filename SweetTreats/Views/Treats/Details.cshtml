@{
  Layout = "_Layout";
}

@model SweetTreats.Models.Treat

<h2>Treat Details</h2>
<hr />
<h3>@Html.DisplayNameFor(model => model.TreatName): @Html.DisplayFor(model => model.TreatName)</h3>
<h3>@Html.DisplayNameFor(model => model.TreatDescription): @Html.DisplayFor(model => model.TreatDescription)</h3>



@if(@Model.Flavors.Count == 0)
{
  <p>This treat has not flavors</p>
}
else
{
  <h4>Flavors this treat has</h4>
  <ul>
  @foreach(var join in Model.Flavors)
  {
    <li>@join.Flavor.FlavorName</li>
    @using (Html.BeginForm("DeleteFlavor", "Treats"))
    {
      @Html.Hidden("joinId", @join.FlavorTreatId)
      <input type="submit" value="Remove"/>
    }
  }
  </ul>
}


<p>@Html.ActionLink("Back to list", "Index", null, null, new { @class="btn btn-outline-dark btn-block"})</p>
<p>@Html.ActionLink("Edit Treat", "Edit", new { id = Model.TreatId }, new { @class="btn btn-outline-dark btn-block"})</p>
<p>@Html.ActionLink("Add a Flavor", "AddFlavor", new { id = Model.TreatId },  new { @class="btn btn-outline-dark btn-block"})</p>
<p>@Html.ActionLink("Delete this Treat", "Delete", new { id = Model.TreatId }, new { @class="btn btn-outline-dark btn-block"})</p>